"""init

Revision ID: 7495a75c00c7
Revises: 
Create Date: 2022-06-22 08:33:20.138535

"""
from datetime import datetime
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "7495a75c00c7"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "token",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("expires", sa.DateTime(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "username", sa.String(length=32), server_default="hooman", nullable=False
        ),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column(
            "avatar",
            sa.String(),
            server_default="http://192.168.2.56:8000/static/images/avatars/default.png",
            nullable=False,
        ),
        sa.Column("is_super", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "notebook",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("label", sa.String(), nullable=False),
        sa.Column("rank", sa.Integer(), nullable=False),
        sa.Column("about", sa.String(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), default=datetime.utcnow(), nullable=True
        ),
        sa.Column(
            "edited_at",
            sa.DateTime(),
            default=datetime.utcnow(),
            onupdate=datetime.utcnow(),
            nullable=True,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "usersettings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("time_diff", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "note",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("label", sa.String(), nullable=True),
        sa.Column("body", sa.Text(), server_default="", nullable=False),
        sa.Column("rank", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), default=datetime.utcnow(), nullable=True
        ),
        sa.Column(
            "edited_at",
            sa.DateTime(),
            default=datetime.utcnow(),
            onupdate=datetime.utcnow(),
            nullable=True,
        ),
        sa.Column("notebook_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["notebook_id"], ["notebook.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("note")
    op.drop_table("usersettings")
    op.drop_table("notebook")
    op.drop_table("user")
    op.drop_table("token")
    # ### end Alembic commands ###
